抽象類和接口的差異：

    相同點：
        1. 都是抽象形式，都可以有抽象方法，都無法創建對象。
        2. 都是子類形式：  抽象類 是被 子類 繼承使用
                          接口 是被 實現類 實現。
        3. 一個類 繼承 抽象類 or 實現接口，都必須重寫完他們的抽象方法，否則自己要成為抽象類 or 報錯
        4. 都能支持多態，都能實現解耦合

    不同點：
        1. 抽象類 中能定義全部成員
            接口  只能定義常量、抽象方法(JDK8新增的三種方法)
        2. 抽象類  只能被類單繼承
            接口   可以被多個類實現
        3. 抽象類  適用於模板設計(Design Pattern)，更利於做父類，實現代碼的複用性
            接口   適用於做功能的解耦合，模組性更強

關於static修飾：
    無static修飾，屬於 對象object 擁有的
    有static修飾，屬於 類class 擁有的

抽象類和接口的使用時機：
    抽象類：
        無法創建對象，所以只能被繼承，用來做為父類，實現代碼的重複性。
    接口：
        無法創建對象，所以使用匿名內部類，可以創建一個接口的實現類，當作一個子類來使用。

集合體系結構：
Collection <E>
1. List ：有序、可重複、有索引
    ArrayList
    LinkedList
2. Set： 無序、無重複、無索引
    HashSet
        LinkedHashSet："有序" 、 無重複、無索引
    TreeSet："按照大小默認升序排序"、無重複、無索引